#!/bin/bash
set -eu

cd "$(dirname "$0")"

d_ver=2.078.3

test -f ~/dlang/install.sh || curl -fsS https://dlang.org/install.sh | bash -s update
test -f ~/dlang/dmd-$d_ver/activate || ~/dlang/install.sh dmd-$d_ver
# shellcheck disable=SC1090
source ~/dlang/dmd-$d_ver/activate

flags=(
	-m64
	-g
	-Isrc
	-Ilib
	-L-lcurl
	-L-lsqlite3
#	-debug
#	-debug=ASOCKETS
#	-version=LIBEV
)

test -f build.local && source build.local

if false # [[ -f /usr/lib/libssl.so.1.0.0 ]]
then
	flags+=(
		-L/usr/lib/libssl.so.1.0.0
		-L/usr/lib/libcrypto.so.1.0.0
	)
else
	flags+=(
		-L-lssl
		-L-lcrypto
	)
fi

case "$(openssl version)" in
	'')
		printf 'WARNING: failed to detect OpenSSL version.\n' >&2
		;;
	'OpenSSL 1.0.0'*)
		flags+=(-version=DeimosOpenSSL_1_0_0)
		;;
	'OpenSSL 1.0.1'*)
		flags+=(-version=DeimosOpenSSL_1_0_1)
		;;
	'OpenSSL 1.0.2'*)
		flags+=(-version=DeimosOpenSSL_1_0_2)
		;;
	'OpenSSL 1.1.0'*)
		flags+=(-version=DeimosOpenSSL_1_1_0)
		;;
	'OpenSSL 1.1.1'*)
		flags+=(-version=DeimosOpenSSL_1_1_1)
		;;
	'OpenSSL 3.0.'*)
		flags+=(-version=DeimosOpenSSL_3_0)
		;;
	*)
		printf 'WARNING: unknown OpenSSL version: %s\n' "$(openssl version)" >&2
		;;
esac

progs=()

for arg in "$@"
do
	if [[ "$arg" == -* ]]
	then
		flags+=("$arg")
	else
		progs+=("$arg")
	fi
done

if [[ "${#progs[@]}" -eq 0 ]]
then
	for fn in $(find src/dfeed/progs -name '*.d')
	do
		name=$(realpath --relative-to=src/dfeed/progs "$fn")
		progs+=("${name%.d}")
	done
fi

for prog in "${progs[@]}"
do
	echo "Rebuilding $prog..."
	rdmd --build-only -of"${prog//\//-}" "${flags[@]}" "src/dfeed/progs/$prog.d"
	echo OK.
done
echo Rebuilding resources...
make -s
echo Done.
